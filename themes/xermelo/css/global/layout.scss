/*
    General site layout and grid configuration -
    see "grid.scss" for the grid class definitions
*/

// Media query sizes
$breakpoints: (
    "small": 576px,
    // After this we're in tablet mode
    "medium": 768px,
    // After this we're in the smallish
    // desktop mode
    "large": 992px,
    // After this we're in the largeish desktop mode
    "x-large": 1200px,
    // After this the content hits its 1344px
    // max-width
    "xx-large": 1440px,
    // Some backgrounds don't work stretched beyond these
    // "xx-large": 1440px,
    "xxx-large": 1600px,
);

// Settings - these are implemented as SASS variables
// here so that we can iterate over them inside of
// "grid.scss"; in your code, use the CSS properties
// such as "var(--grid-num-columns)" to avoid needing
// to use media queries whenever these values change
$grid-mobile-num-columns: 4;
$grid-mobile-num-spaces: 3;

$grid-desktop-num-columns: 12;
$grid-desktop-num-spaces: 11;

// Min width - note this needs to be in px since it may
// be used in media queries
$mobile-min-width: 320px;

// Max content width
$desktop-max-width: calc(#{map-get($breakpoints, "x-large")} - (2 * 2rem));

/*
    Properties
*/
:root {
    // Gutter width to the left & right of the grid
    --grid-gutter-width: 3rem;

    // Number of columns and spaces
    --grid-num-columns: #{$grid-mobile-num-columns};
    --grid-num-spaces: #{$grid-mobile-num-spaces};

    // Space between columns within the grid
    --grid-column-spacing: 2rem;

    @include media(">=small") {
        // Desktop overrides
        --grid-gutter-width: 2rem;
        --grid-num-columns: #{$grid-desktop-num-columns};
        --grid-num-spaces: #{$grid-desktop-num-spaces};
        --grid-column-spacing: 4rem;
    }
}

// Generates a calc() statement to produce the specified
// number of columns and spaces given the layout of the
// element's container, as defined by the CSS variables
// "--grid-parent-columns" and "--grid-parent-spaces"
@function grid-size($columns,
    $spaces,
) {
    @return calc(((100% - (var(--grid-column-spacing) * var(--grid-parent-spaces))) * (#{$columns} / var(--grid-parent-columns))) + (var(--grid-column-spacing) * #{$spaces}));
}

//container max width
$container-max-widths-sm: 540px !default;
$container-max-widths-md: 720px !default;
$container-max-widths-lg: 960px !default;
$container-max-widths-xl: 1140px !default;
$container-max-widths-xxl: 1360px;

//container padding
$container-padding: 0 24px;

.container {
    margin: 0 auto;
    width: 100%;
    padding: $container-padding;

    @include media(">=small") {
        max-width: $container-max-widths-sm;
    }

    @include media(">=medium") {
        max-width: $container-max-widths-md;
    }

    @include media(">=large") {
        max-width: $container-max-widths-lg;
    }

    @include media(">=x-large") {
        max-width: $container-max-widths-xl;
    }

    @include media(">=xx-large") {
        max-width: $container-max-widths-xxl;
    }
}

.block-md {
    max-width: 1088px;
    margin: 0 auto;
}